# Generated by Django 2.1 on 2019-07-13 19:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ('first_name',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alternativa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(verbose_name='Descripcion')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
            ],
            options={
                'verbose_name': 'Alternativa',
                'verbose_name_plural': 'Alternativas',
            },
        ),
        migrations.CreateModel(
            name='Escenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Escenario')),
                ('activa', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
            ],
            options={
                'verbose_name': 'Escenario',
                'verbose_name_plural': 'Escenarios',
            },
        ),
        migrations.CreateModel(
            name='Etapa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('activa', models.BooleanField(default=False)),
                ('fecha_inicio', models.DateField(null=True, verbose_name='Fecha Inicio')),
                ('fecha_termino', models.DateField(null=True, verbose_name='Fecha Termino')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
                ('etapa_siguiente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='siguiente', to='core.Etapa')),
            ],
            options={
                'verbose_name': 'Etapa',
                'verbose_name_plural': 'Etapas',
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('fecha', models.DateTimeField(blank=True, null=True, verbose_name='Fecha Evento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
                ('etapa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Etapa')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
            },
        ),
        migrations.CreateModel(
            name='Personaje',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
            ],
            options={
                'verbose_name': 'Personaje',
                'verbose_name_plural': 'Personajes',
            },
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(verbose_name='Descripcion')),
                ('orden', models.IntegerField(null=True, verbose_name='Orden')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
                ('alternativas', models.ManyToManyField(related_name='alternativas', to='core.Alternativa')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='nombre')),
                ('stock', models.IntegerField(help_text='Cantidad total disponible de roles en la historia', verbose_name='Stock')),
                ('stock_ocupado', models.IntegerField(help_text='Total de roles ocupados hasta el momento', verbose_name='Stock ocupado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Texto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('texto', models.TextField(verbose_name='Texto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
            ],
            options={
                'verbose_name': 'Texto',
                'verbose_name_plural': 'Textos',
            },
        ),
        migrations.CreateModel(
            name='Tipo_Pregunta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
            ],
            options={
                'verbose_name': 'Tipo Pregunta',
                'verbose_name_plural': 'Tipos Preguntas',
            },
        ),
        migrations.CreateModel(
            name='Trama',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250, verbose_name='Trama')),
                ('fecha_inicio', models.DateField(null=True, verbose_name='Fecha Inicio')),
                ('fecha_termino', models.DateField(null=True, verbose_name='Fecha Termino')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='actualizado el')),
                ('escenario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Escenario')),
            ],
            options={
                'verbose_name': 'Trama',
                'verbose_name_plural': 'Tramas',
            },
        ),
        migrations.AddField(
            model_name='texto',
            name='trama',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Trama'),
        ),
        migrations.AddField(
            model_name='pregunta',
            name='rol',
            field=models.ManyToManyField(related_name='roles', to='core.Rol'),
        ),
        migrations.AddField(
            model_name='pregunta',
            name='tipo_pregunta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Tipo_Pregunta'),
        ),
        migrations.AddField(
            model_name='personaje',
            name='rol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Rol', verbose_name='Rol'),
        ),
        migrations.AddField(
            model_name='personaje',
            name='trama',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personaje_set', to='core.Trama', verbose_name='trama'),
        ),
        migrations.AddField(
            model_name='personaje',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personaje_set', to=settings.AUTH_USER_MODEL, unique=True, verbose_name='usuario'),
        ),
        migrations.AddField(
            model_name='evento',
            name='pregunta',
            field=models.ManyToManyField(related_name='evento_preguntas', to='core.Pregunta'),
        ),
        migrations.AddField(
            model_name='etapa',
            name='pregunta',
            field=models.ManyToManyField(related_name='etapa_preguntas', to='core.Pregunta', verbose_name='Pregunta(Perfil)'),
        ),
        migrations.AddField(
            model_name='etapa',
            name='trama',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Trama'),
        ),
        migrations.AddField(
            model_name='alternativa',
            name='pregunta',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Pregunta'),
        ),
        migrations.AddField(
            model_name='user',
            name='personaje',
            field=models.ManyToManyField(related_name='personajes', through='core.Personaje', to='core.Trama'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
